using System;
using System.Collections.Generic;
using Game1.Interface;
using Game1.Map;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;

namespace Game1
{
   public class Game1 : Microsoft.Xna.Framework.Game
   {
      private const int WindowWidth = 1360;
      private const int WindowHeight = 768;

      GraphicsDeviceManager _graphics;
      SpriteBatch _spriteBatch;

      private World _w;

      private List<IGraph> _scena;

      public Game1()
      {
         _graphics = new GraphicsDeviceManager(this)
         {
            PreferredBackBufferWidth = WindowWidth,
            PreferredBackBufferHeight = WindowHeight,
            //IsFullScreen = fullscreen
         };

         Content.RootDirectory = "Content";
      }

      protected override void Initialize()
      {
         base.Initialize();

      }

      protected override void LoadContent()
      {
         _spriteBatch = new SpriteBatch(GraphicsDevice);

         Texture2D groundTexture = Content.Load<Texture2D>("ground");

         _scena = new List<IGraph>();
         _w = new World(groundTexture, 9, 9, new int[]{
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,32,4,37,14,11,38,73,63,7,37,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,14,11,11,29,40,59,34,40,46,78,9,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,32,4,28,67,71,26,39,41,41,77,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,71,71,44,67,80,81,9,10,38,41,23,75,45,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,81,81,72,80,81,81,63,7,10,38,55,79,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,81,81,81,81,81,81,81,63,7,10,22,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,81,81,81,27,21,21,75,54,6,1,37,41,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,81,81,54,33,4,55,25,66,35,4,37,41,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,51,51,42,41,32,76,63,52,15,2,37,41,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,77,81,72,35,4,37,41,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,14,74,27,75,18,29,40,41,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,32,22,30,49,33,40,41,41,41,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,32,40,41,41,41,41,41,41,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,81,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,81,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,81,81,81,81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,81,81,41,81,81,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,81,81,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,81,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
               41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41
         }, 41, 41, WindowWidth, WindowHeight, 29, 15);

         _scena.Add(_w);
      }

      protected override void UnloadContent()
      {
      }

      protected override void Update(GameTime gameTime)
      {
         // Allows the game to exit
         if (GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed)
            this.Exit();

         UpdateKeyboard();

         foreach (IGraph igr in _scena)
         {
            igr?.Update();
         }

         base.Update(gameTime);
      }

      protected override void Draw(GameTime gameTime)
      {
         GraphicsDevice.Clear(Color.Black);

         _spriteBatch.Begin();

         foreach (IGraph igr in _scena)
         {
            igr?.Draw(_spriteBatch);

         }
         _spriteBatch.End();


         base.Draw(gameTime);
      }

      private void UpdateKeyboard()
      {
         KeyboardState keyboardState = Keyboard.GetState();

         if (keyboardState.IsKeyDown(Keys.Escape))
            Uscita();

         if (keyboardState.IsKeyDown(Keys.W) || keyboardState.IsKeyDown(Keys.Up))
         {
            // Tasto UP premuto    
         }
      }

      public void Uscita()
      {
         Console.WriteLine("Chiusura in corso...");

         EndRun();
         Exit();
      }
   }
}
